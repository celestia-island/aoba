name: Cargo Auto Fix

on:
  push:
    branches: [master, main]
  pull_request:
    branches: [master, main]
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  auto-fix:
    name: Auto Fix Cargo Issues
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          components: rustfmt, clippy

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libudev-dev pkg-config libx11-dev libxcb-shape0-dev libxcb-xfixes0-dev

      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Run cargo check
        id: check
        run: |
          echo "Running cargo check..."
          cargo check --all-targets --all-features 2>&1 | tee check.log || echo "check_failed=true" >> $GITHUB_OUTPUT
        continue-on-error: true

      - name: Run cargo clippy (check)
        id: clippy_check
        run: |
          echo "Running cargo clippy check..."
          cargo clippy --all-targets --all-features -- -D warnings 2>&1 | tee clippy.log || echo "clippy_failed=true" >> $GITHUB_OUTPUT
        continue-on-error: true

      - name: Run cargo fmt (check)
        id: fmt_check
        run: |
          echo "Running cargo fmt check..."
          cargo fmt --all -- --check 2>&1 | tee fmt.log || echo "fmt_failed=true" >> $GITHUB_OUTPUT
        continue-on-error: true

      - name: Attempt auto-fix with cargo fix
        if: steps.check.outputs.check_failed == 'true'
        run: |
          echo "Attempting to fix compilation errors with cargo fix..."
          cargo fix --all-targets --allow-dirty --allow-staged || true
        continue-on-error: true

      - name: Attempt auto-fix with cargo clippy --fix
        if: steps.clippy_check.outputs.clippy_failed == 'true'
        run: |
          echo "Attempting to fix clippy warnings..."
          cargo clippy --fix --all-targets --all-features --allow-dirty --allow-staged || true
        continue-on-error: true

      - name: Run cargo fmt (auto-fix)
        if: steps.fmt_check.outputs.fmt_failed == 'true'
        run: |
          echo "Running cargo fmt to fix formatting..."
          cargo fmt --all
        continue-on-error: true

      - name: Check for changes
        id: git_status
        run: |
          git add -A
          if git diff --cached --quiet; then
            echo "has_changes=false" >> $GITHUB_OUTPUT
            echo "No changes to commit"
          else
            echo "has_changes=true" >> $GITHUB_OUTPUT
            echo "Changes detected:"
            git diff --cached --stat
          fi

      - name: Commit and push changes
        if: steps.git_status.outputs.has_changes == 'true'
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git commit -m "ðŸŽ¨ Clippy."
          git push
