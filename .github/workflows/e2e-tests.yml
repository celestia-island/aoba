name: E2E Tests

on:
  push:
    branches: [master, dev]
  pull_request:

env:
  CARGO_TERM_COLOR: always

jobs:
  # Single setup job that builds everything and prepares for testing
  setup:
    name: Build and Setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libudev-dev pkg-config libx11-dev libxcb-shape0-dev libxcb-xfixes0-dev socat

      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Build main binary
        run: cargo build --bin aoba

      - name: Build all E2E examples
        run: |
          cargo build --package cli_e2e
          cargo build --package tui_e2e

      - name: Setup virtual serial ports
        run: |
          chmod +x scripts/socat_init.sh
          ./scripts/socat_init.sh

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            target/debug/aoba
            target/debug/cli_e2e
            target/debug/tui_e2e

  # CLI E2E tests run in parallel as separate jobs
  cli-e2e:
    name: CLI E2E - ${{ matrix.module }}
    needs: setup
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        module:
          # Basic CLI tests
          - help
          - list_ports
          - list_ports_json
          - list_ports_status
          # Modbus CLI tests (no vcom needed)
          - modbus_slave_listen_temp
          - modbus_slave_listen_persist
          - modbus_master_provide_temp
          - modbus_master_provide_persist
          # Modbus E2E tests (require vcom ports)
          - modbus_slave_listen_vcom
          - modbus_master_provide_vcom
          - modbus_master_slave_communication
          - modbus_basic_master_slave
          - modbus_multi_masters
          - modbus_multi_masters_same_station
          - modbus_multi_slaves
          - modbus_multi_slaves_same_station
          - modbus_multi_slaves_adjacent_registers
          # CLI Single-Station Register Mode Tests
          - modbus_single_station_coils
          - modbus_single_station_discrete_inputs
          - modbus_single_station_holding
          - modbus_single_station_input
          # CLI Multi-Station Tests
          - modbus_multi_station_mixed_types
          - modbus_multi_station_spaced_addresses
          - modbus_multi_station_mixed_ids

    steps:
      - uses: actions/checkout@v5

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libudev-dev pkg-config socat

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: target/debug/

      - name: Make binaries executable
        run: |
          chmod +x target/debug/aoba
          chmod +x target/debug/cli_e2e

      - name: Setup virtual serial ports
        run: |
          chmod +x scripts/socat_init.sh
          ./scripts/socat_init.sh

      - name: Run CLI E2E module
        run: ./target/debug/cli_e2e --module ${{ matrix.module }}

      - name: Cleanup virtual ports
        if: always()
        run: |
          pkill socat || true
          rm -f /tmp/vcom1 /tmp/vcom2 || true

  # TUI E2E tests run in parallel as separate jobs
  tui-e2e:
    name: TUI E2E - ${{ matrix.module }}
    needs: setup
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        module:
          # TUI Single-Station Master Mode
          - tui_master_coils
          - tui_master_discrete_inputs
          - tui_master_holding
          - tui_master_input
          # TUI Single-Station Slave Mode
          - tui_slave_coils
          - tui_slave_discrete_inputs
          - tui_slave_holding
          - tui_slave_input
          # TUI Multi-Station Master Mode
          - tui_multi_master_mixed_types
          - tui_multi_master_spaced_addresses
          - tui_multi_master_mixed_ids
          # TUI Multi-Station Slave Mode
          - tui_multi_slave_mixed_types
          - tui_multi_slave_spaced_addresses
          - tui_multi_slave_mixed_ids

    steps:
      - uses: actions/checkout@v5

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libudev-dev pkg-config socat

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: target/debug/

      - name: Make binaries executable
        run: |
          chmod +x target/debug/aoba
          chmod +x target/debug/tui_e2e

      - name: Setup virtual serial ports
        run: |
          chmod +x scripts/socat_init.sh
          ./scripts/socat_init.sh

      - name: Run TUI E2E module
        run: ./target/debug/tui_e2e --module ${{ matrix.module }}

      - name: Cleanup virtual ports
        if: always()
        run: |
          pkill socat || true
          pkill aoba || true
          rm -f /tmp/vcom1 /tmp/vcom2 || true
