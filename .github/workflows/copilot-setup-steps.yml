name: "Copilot Setup Steps"

on:
  workflow_dispatch:
  push:
    paths:
      - .github/workflows/copilot-setup-steps.yml
  pull_request:
    paths:
      - .github/workflows/copilot-setup-steps.yml

jobs:
  copilot-setup-steps:
    runs-on: ubuntu-latest

    permissions:
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      # Use stable Rust for consistent smoke test results
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      # Install system dependencies including socat for virtual serial ports
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libudev-dev pkg-config libx11-dev libxcb-shape0-dev libxcb-xfixes0-dev socat

      # Cache Cargo registry for faster builds
      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
          key: copilot-env-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            copilot-env-cargo-

      # Test the environment to ensure everything works
      # Note: Environment uses socat-created virtual serial ports for testing
      - name: Test environment (sanity checks)
        run: |
          rustc --version || true
          cargo --version || true

          # Quick cargo check (non-failing to avoid CI breakage)
          cargo check --all-targets || true

          # Create test virtual serial ports to verify socat works
          echo "Testing socat virtual serial port creation:"
          socat PTY,link=/tmp/test_vcom1,raw,echo=0 PTY,link=/tmp/test_vcom2,raw,echo=0 &
          SOCAT_TEST_PID=$!
          sleep 2

          if [ -e /tmp/test_vcom1 ] && [ -e /tmp/test_vcom2 ]; then
            echo "✓ socat virtual serial ports working"
            ls -la /tmp/test_vcom1 /tmp/test_vcom2
          else
            echo "⚠ socat virtual serial ports not created"
          fi

          # Clean up test ports
          kill $SOCAT_TEST_PID || true
          rm -f /tmp/test_vcom1 /tmp/test_vcom2 || true

          # Verify other serial ports are available for testing
          echo "Available serial ports for testing:"
          find /dev -name "ttyS*" | head -5

      # Run the Copilot CI environment validation test
      - name: Validate Copilot CI Container Environment
        run: |
          if [ -f "./ci_test.sh" ]; then
            echo "Running Copilot CI environment validation..."
            ./ci_test.sh
          else
            echo "✅ Copilot CI environment validation script not found (may be expected for older branches)"
          fi

      # Clean up virtual ports/processes (ensure socat is killed if started)
      - name: Cleanup
        if: always()
        run: |
          # Kill any remaining socat processes
          pkill socat || true

          # Remove any remaining virtual port links
          sudo rm -f /dev/vcom1 /dev/vcom2 || true
          sudo rm -f /tmp/test_vcom1 /tmp/test_vcom2 || true
