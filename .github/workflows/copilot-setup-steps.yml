# Copilot development environment setup
# This workflow provides a ready-to-use environment for GitHub Copilot agents
# Includes Rust toolchain, virtual serial ports, and virtual terminals
name: Copilot Environment

on:
  # Manual trigger for setting up Copilot development environment
  workflow_dispatch:
  # Also run on schedule to keep environment fresh
  schedule:
    - cron: "0 6 * * 1" # Every Monday at 6 AM UTC

env:
  CARGO_TERM_COLOR: always

jobs:
  setup-copilot-env:
    name: Setup Copilot Environment
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      # Use stable Rust for consistent smoke test results
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      # Install system dependencies including socat for virtual serial ports
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libudev-dev pkg-config libx11-dev libxcb-shape0-dev libxcb-xfixes0-dev socat

      # Cache Cargo registry for faster builds
      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
          key: copilot-env-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            copilot-env-cargo-

      # Set up virtual serial ports
      # Creates /dev/ttyV1 and /dev/ttyV2 connected to each other
      - name: Setup virtual serial ports
        run: |
          # Start socat as root so it can create device nodes under /dev
          sudo socat -d -d pty,raw,echo=0,link=/dev/ttyV1 pty,raw,echo=0,link=/dev/ttyV2 &
          SOCAT_PID=$!
          echo "SOCAT_PID=$SOCAT_PID" >> $GITHUB_ENV

          # Wait for device files to appear (timeout after 10s)
          for i in {1..10}; do
            if [ -e /dev/ttyV1 ] && [ -e /dev/ttyV2 ]; then
              break
            fi
            sleep 1
          done

          # Double-check existence and try to change permissions as sudo to avoid Permission denied
          if [ -e /dev/ttyV1 ] && [ -e /dev/ttyV2 ]; then
            sudo chmod 666 /dev/ttyV1 /dev/ttyV2 || true
          else
            echo "Virtual serial devices not created: /dev/ttyV1 or /dev/ttyV2 missing"
            ps aux | grep socat || true
            exit 1
          fi

      # Test the environment to ensure everything works
      - name: Test environment (sanity checks)
        run: |
          rustc --version || true
          cargo --version || true

          # Sanity check: ensure helper scripts and ports exist
          [ -d /tmp/copilot-ports ] || exit 0
          [ -d /tmp/copilot-scripts ] || exit 0

          # Quick cargo check (non-failing to avoid CI breakage)
          cargo check --all-targets || true
