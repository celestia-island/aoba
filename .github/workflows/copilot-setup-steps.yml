# Copilot development environment setup
# This workflow provides a ready-to-use environment for GitHub Copilot agents
# Includes Rust toolchain, virtual serial ports, and virtual terminals
name: Copilot Environment

on:
  # Manual trigger for setting up Copilot development environment
  workflow_dispatch:
  # Also run on schedule to keep environment fresh
  schedule:
    - cron: "0 6 * * 1" # Every Monday at 6 AM UTC

env:
  CARGO_TERM_COLOR: always

jobs:
  setup-copilot-env:
    name: Setup Copilot Environment
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      # Use stable Rust for consistent smoke test results
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      # Install system dependencies (socat no longer needed for virtual ports)
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libudev-dev pkg-config libx11-dev libxcb-shape0-dev libxcb-xfixes0-dev

      # Cache Cargo registry for faster builds
      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
          key: copilot-env-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            copilot-env-cargo-

      # Test the environment to ensure everything works
      # Note: Environment uses existing ttyS devices present in CI
      - name: Test environment (sanity checks)
        run: |
          rustc --version || true
          cargo --version || true

          # Quick cargo check (non-failing to avoid CI breakage)
          cargo check --all-targets || true

          # Verify serial ports are available for testing
          echo "Available serial ports for testing:"
          find /dev -name "ttyS*" | head -5

      # Clean up virtual ports/processes (ensure socat is killed if started)
      - name: Cleanup
        if: always()
        run: |
          if [ ! -z "$SOCAT_PID" ]; then
            sudo kill $SOCAT_PID || true
          fi

          if [ -e /dev/ttyV1 ]; then
            sudo rm -f /dev/ttyV1 || true
          fi
          if [ -e /dev/ttyV2 ]; then
            sudo rm -f /dev/ttyV2 || true
          fi
