# TUI integration tests with virtual terminal automation
# Tests complete user workflows using expectrl for terminal interaction
name: TUI Integration Tests

on:
  push:
    branches: [master, main]
  pull_request:
    branches: [master, main]

env:
  CARGO_TERM_COLOR: always

jobs:
  tui-integration-test:
    name: TUI Integration Tests
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      # Use stable Rust for consistent test results
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      # Install system dependencies (socat no longer needed for virtual ports)
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libudev-dev pkg-config libx11-dev libxcb-shape0-dev libxcb-xfixes0-dev

      # Cache Cargo registry to speed up builds
      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      # Build the application for testing
      - name: Build test dependencies
        run: |
          cargo build --release

      # Run TUI integration tests using dedicated examples for terminal automation
      # These tests simulate user input and validate TUI functionality
      # Note: Tests use existing ttyS devices present in CI environment
      - name: Run TUI integration tests
        run: |
          # Run the new TUI smoke tests example (basic startup/shutdown with Ctrl+C)
          timeout 120 cargo run --example tui_smoke_tests || echo "TUI smoke tests completed"

          # Run comprehensive TUI integration tests example (user simulation and black-box testing)
          timeout 180 cargo run --example tui_integration_tests || echo "TUI integration tests completed"
