name: TUI E2E Tests

on:
  push:
    branches: [master, main]
  pull_request:
    branches: [master, main]

env:
  CARGO_TERM_COLOR: always

jobs:
  tui-e2e-test:
    name: TUI E2E Tests
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v5

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libudev-dev pkg-config libx11-dev libxcb-shape0-dev libxcb-xfixes0-dev socat

      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Build test dependencies
        run: |
          cargo build

      - name: Setup virtual serial ports
        run: |
          # Create virtual serial port pair using socat in background with sudo
          sudo bash -c 'socat PTY,link=/dev/vcom1,raw,echo=0 PTY,link=/dev/vcom2,raw,echo=0 &'
          sleep 2  # Give socat time to start

          # Wait for the virtual ports to be created
          timeout=10
          count=0
          while [ $count -lt $timeout ] && ([ ! -e /dev/vcom1 ] || [ ! -e /dev/vcom2 ]); do
            sleep 1
            count=$((count + 1))
          done

          # Verify both ports exist
          if [ -e /dev/vcom1 ] && [ -e /dev/vcom2 ]; then
            echo "Virtual serial ports created successfully:"
            ls -la /dev/vcom1 /dev/vcom2
            # Make sure the ports are accessible
            sudo chmod 666 /dev/vcom1 /dev/vcom2
          else
            echo "Failed to create virtual serial ports"
            exit 1
          fi

      - name: Run TUI E2E tests
        run: |
          cargo run -p aoba_tui_e2e_tests --bin tui_e2e_tests

      - name: Cleanup virtual ports
        if: always()
        run: |
          # Kill socat processes if they exist
          sudo pkill socat || true

          # Remove virtual port links if they exist
          sudo rm -f /dev/vcom1 /dev/vcom2 || true
